syntax = "proto3";
package buchain.exchange;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "buchain/exchange/params.proto";
import "buchain/exchange/exchange_rate.proto";
// this line is used by starport scaffolding # 1
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "bu-chain/x/exchange/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/bu-chain/exchange/params";
  }
  // Queries a ExchangeRate by index.
	rpc ExchangeRate(QueryGetExchangeRateRequest) returns (QueryGetExchangeRateResponse) {
		option (google.api.http).get = "/bu-chain/exchange/exchange_rate/{index}";
	}

	// Queries a list of ExchangeRate items.
	rpc ExchangeRateAll(QueryAllExchangeRateRequest) returns (QueryAllExchangeRateResponse) {
		option (google.api.http).get = "/bu-chain/exchange/exchange_rate";
	}

// Queries a list of ExchangeAmount items.
	rpc ExchangeAmount(QueryExchangeAmountRequest) returns (QueryExchangeAmountResponse) {
		option (google.api.http).get = "/bu-chain/exchange/exchange_amount/{denom}/{amount}/{exchangeToken}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetExchangeRateRequest {
	  string index = 1;

}

message QueryGetExchangeRateResponse {
	ExchangeRate exchangeRate = 1 [(gogoproto.nullable) = false];
}

message QueryAllExchangeRateRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllExchangeRateResponse {
	repeated ExchangeRate exchangeRate = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryExchangeAmountRequest {
//   cosmos.base.v1beta1.Coin denom = 1 [(gogoproto.nullable) = false];
	string denom = 1;
	string amount = 2;
  	string exchangeToken = 3;
}

message QueryExchangeAmountResponse {
	uint64 amount = 1;
}

// this line is used by starport scaffolding # 3
